<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration" xmlns:int-ip="http://www.springframework.org/schema/integration/ip"
	xmlns:int-file="http://www.springframework.org/schema/integration/file" xmlns:int-groovy="http://www.springframework.org/schema/integration/groovy" xmlns:int-script="http://www.springframework.org/schema/integration/scripting"
	xmlns:int-stream="http://www.springframework.org/schema/integration/stream" xmlns:int-ws="http://www.springframework.org/schema/integration/ws" xmlns:int-xml="http://www.springframework.org/schema/integration/xml"
	xmlns:task="http://www.springframework.org/schema/task"

	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
		http://www.springframework.org/schema/integration/scripting http://www.springframework.org/schema/integration/scripting/spring-integration-scripting.xsd
		http://www.springframework.org/schema/integration/ip http://www.springframework.org/schema/integration/ip/spring-integration-ip.xsd
		http://www.springframework.org/schema/integration/xml http://www.springframework.org/schema/integration/xml/spring-integration-xml.xsd
		http://www.springframework.org/schema/integration/file http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
		http://www.springframework.org/schema/integration/groovy http://www.springframework.org/schema/integration/groovy/spring-integration-groovy.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/integration/ws http://www.springframework.org/schema/integration/ws/spring-integration-ws.xsd">

	<!-- Raw data files -->
	<int-file:inbound-channel-adapter prevent-duplicates="false" directory="file:input" channel="inputFiles" filename-pattern="*.dat">
		<int:poller default="true" fixed-rate="10000" />
	</int-file:inbound-channel-adapter>

	<!-- Chain expression: 1) Add extension to header 2) Split the file into lines 3) Route the line to different channel depending on the extension containing in the header -->
	<int:chain input-channel="inputFiles">
		<int:header-enricher>
			<int:header name="extension" expression="payload.getName().substring(payload.getName().lastIndexOf('.'))" />
		</int:header-enricher>
		<int:splitter expression="T(org.apache.commons.io.FileUtils).lineIterator(payload)" />
		<int:router expression="headers.extension">
			<int:mapping value=".dat" channel="queueChannel_20200" />
		</int:router>
	</int:chain>

	<!-- Define queue channel -->
	<int:channel id="queueChannel_20200">
		<int:queue />
	</int:channel>
	<!-- Define bridge to send message each second -->
	<int:bridge input-channel="queueChannel_20200" output-channel="udpChannel_20200">
		<int:poller fixed-delay="1000" max-messages-per-poll="1" />
	</int:bridge>

	<!-- Another Java Class -->
	<!-- Expression SPEL -->
	<int:inbound-channel-adapter expression="'$HEHDT,11.1,T*22'" channel="udpChannel_20202">
		<int:poller fixed-delay="1000" />
	</int:inbound-channel-adapter>



	<!-- Define UDP outbound channel -->
	<int:channel id="udpChannel_20200" />
	<int:channel id="udpChannel_20202" />

	<int-ip:udp-outbound-channel-adapter channel="udpChannel_20200" host="134.246.151.255" port="20200" />
	<int-ip:udp-outbound-channel-adapter channel="udpChannel_20202" host="134.246.151.255" port="20202" />

</beans>
